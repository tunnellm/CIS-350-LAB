<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="CIS_350_LAB">
  <property environment="env"/>
  <property name="ECLIPSE_HOME" value="../../eclipse/java-2020-09/eclipse/"/>
  <property name="junit.output.dir" value="junit"/>
  <property name="debuglevel" value="source,lines,vars"/>
  <property name="target" value="11"/>
  <property name="source" value="11"/>
  <path id="JUnit 4.libraryclasspath">
    <pathelement location="../../.p2/pool/plugins/org.junit_4.13.0.v20200204-1500.jar"/>
    <pathelement location="../../.p2/pool/plugins/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
  </path>
  <path id="CIS350_CI_Demo.classpath">
    <pathelement location="bin"/>
    <path refid="JUnit 4.libraryclasspath"/>
  </path>
  <path id="run.SimpleCalculator (1).classpath">
    <path refid="CIS350_CI_Demo.classpath"/>
    <path refid="JUnit 4.libraryclasspath"/>
  </path>
  <path id="run.SimpleCalculatorTest (1).classpath">
    <path refid="CIS350_CI_Demo.classpath"/>
    <path refid="JUnit 4.libraryclasspath"/>
  </path>
  <target name="init">
    <mkdir dir="bin"/>
    <copy includeemptydirs="false" todir="bin">
      <fileset dir="src">
        <exclude name="**/*.launch"/>
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
  </target>
  <target name="clean">
    <delete dir="bin"/>
  </target>
  <target depends="clean" name="cleanall"/>
  <target depends="build-subprojects,build-project" name="build"/>
  <target name="build-subprojects"/>
  <target depends="init" name="build-project">
    <echo message="${ant.project.name}: ${ant.file}"/>
    <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
      <src path="src"/>
      <classpath refid="CIS_350_LAB.classpath"/>
    </javac>
  </target>
  <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
  <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
    <copy todir="${ant.library.dir}">
      <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
    </copy>
    <unzip dest="${ant.library.dir}">
      <patternset includes="jdtCompilerAdapter.jar"/>
      <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
    </unzip>
  </target>
  <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
    <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
    <antcall target="build"/>
  </target>
  <target name="SimpleCalculator (1)">
    <java classname="src.SimpleCalculator" failonerror="true" fork="yes">
      <classpath refid="run.SimpleCalculator (1).classpath"/>
    </java>
  </target>
  <target name="SimpleCalculatorTest (1)">
    <mkdir dir="${junit.output.dir}"/>
    <junit fork="yes" printsummary="withOutAndErr">
      <formatter type="xml"/>
      <test name="src.SimpleCalculatorTest" todir="${junit.output.dir}"/>
      <jvmarg line="-ea"/>
      <classpath refid="run.SimpleCalculatorTest (1).classpath"/>
    </junit>
  </target>
  <target name="junitreport">
    <junitreport todir="${junit.output.dir}">
      <fileset dir="${junit.output.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${junit.output.dir}"/>
    </junitreport>
  </target>
</project>

















